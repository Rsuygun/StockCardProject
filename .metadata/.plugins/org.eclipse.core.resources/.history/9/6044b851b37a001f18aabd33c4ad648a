package View;
import java.awt.EventQueue;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.SwingConstants;
import Services.StockCardService;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.JButton;
import java.awt.Color;
import java.sql.*;
import java.util.List;
import javax.swing.table.DefaultTableModel;

import DAO.DatabaseConnection;
import DAO.StockCardDAO;
import Models.StockCard;

public class StockCardListGUI extends JFrame {

    private JTable table;
    private JTextField textSearch;
    
    private StockCardService stockCardService;

    public StockCardListGUI(StockCardService stockCardService) {
        this.stockCardService = stockCardService;
        initialize(); // JFrame bileşenlerini başlatma
        loadData();   // Verileri yükleme
        showWindow(); // Pencereyi görünür yapma
    }

    private void initialize() {
        // Bu sınıfın kendisini JFrame olarak kullanmak için frame'i kullanmanıza gerek yok
        setBounds(100, 100, 847, 666);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);
        
        JLabel lblListe = new JLabel("LİSTE");
        lblListe.setHorizontalAlignment(SwingConstants.CENTER);
        lblListe.setFont(new Font("Consolas", Font.BOLD, 30));
        lblListe.setBounds(10, 11, 822, 29);
        getContentPane().add(lblListe);
        
        table = new JTable();
        table.setFont(new Font("Consolas", Font.PLAIN, 12));
        table.setBounds(20, 48, 798, 412);
        getContentPane().add(table);
        
        textSearch = new JTextField();
        textSearch.setFont(new Font("Consolas", Font.PLAIN, 16));
        textSearch.setBounds(30, 471, 230, 38);
        getContentPane().add(textSearch);
        textSearch.setColumns(10);
        
        JButton btnSerach = new JButton("ARAMA");
        btnSerach.setBackground(new Color(192, 192, 192));
        btnSerach.setFont(new Font("Consolas", Font.BOLD, 16));
        btnSerach.setBounds(281, 471, 233, 40);
        getContentPane().add(btnSerach);
        
        JButton btnSave = new JButton("YENİ STOK");
        btnSave.setBackground(new Color(192, 192, 192));
        btnSave.setFont(new Font("Consolas", Font.BOLD, 16));
        btnSave.setBounds(10, 571, 250, 42);
        getContentPane().add(btnSave);
        
        JButton btnDelete = new JButton("SİL");
        btnDelete.setBackground(new Color(192, 192, 192));
        btnDelete.setFont(new Font("Consolas", Font.BOLD, 16));
        btnDelete.setBounds(287, 571, 250, 42);
        getContentPane().add(btnDelete);
        
        JButton btnUpdate = new JButton("GÜNCELLE");
        btnUpdate.setBackground(new Color(192, 192, 192));
        btnUpdate.setFont(new Font("Consolas", Font.BOLD, 16));
        btnUpdate.setBounds(568, 571, 250, 42);
        getContentPane().add(btnUpdate);
        
        JButton btnCopy = new JButton("KOPYALA");
        btnCopy.setFont(new Font("Consolas", Font.BOLD, 16));
        btnCopy.setBackground(Color.LIGHT_GRAY);
        btnCopy.setBounds(553, 471, 250, 42);
        getContentPane().add(btnCopy);
    }

    private void loadData() {
        try {
            List<StockCard> stockCardList = stockCardService.getAllStockCards();
            DefaultTableModel model = new DefaultTableModel();
            model.setColumnIdentifiers(new Object[] { "Stock Code", "Stock Name", "Stock Type", "Unit", "Barcode", "KDV Type", "Description", "Date" });
            for (StockCard stockCard : stockCardList) {
                Object[] row = new Object[8]; 
                row[1] = stockCard.getStockCode();
                row[2] = stockCard.getStockName();
                row[3] = stockCard.getStockType();
                row[4] = stockCard.getUnit();
                row[5] = stockCard.getBarcode();
                row[6] = stockCard.getKdvType();
                row[7] = stockCard.getDescription();
                row[8] = stockCard.getDate();
                
                model.addRow(row);
            }
            table.setModel(model);
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Veri yüklenirken bir hata oluştu.");
        }
    }

    public void showWindow() {
    	this.setVisible(true);
    }
}